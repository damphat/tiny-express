var createRoute = require('../createRoute');
var assert = require('assert');

describe.only('createRoute.js', function () {
	it('route is a function of 4 params', function () {
		var route = createRoute('GET', '/');
		assert.equal(typeof route, 'function');		
		assert.equal(route.length, 4);
	});
	
	it('route.layers is an array', function() {
		var route = createRoute();
		assert(Array.isArray(route.layers));
	});
	
	it('callback if route.layers is empty', function(done) {
		var route = createRoute();
		route.handle(null, {method: 'GET', url: '/'}, {}, function (err) {
			done();
		});
	});
	
	it('excute layers and callback', function(done) {
		var route = createRoute();
		var debug = '';
				
		route.layers.push(function(err, req, res, next) {
			debug += '1';	
			next();
		});

		route.layers.push(function(err, req, res, next) {
			debug += '2';
			next();
		});
		
		route(false, {}, {}, function(err) {
			if(debug === '12') return done();
			done('layers have not been excuted');
		});
	});

	it('callback("error") if layers call next("error")', function (done) {
		var route = createRoute();
		
		route.layers.push(function(err, req, res, next) {
			next("error");
		});
				
		route.layers.push(function(err, req, res, next) {
			next(err);
		});

		route(false, {}, {}, function(err) {
			if(err === 'error') return done();
			done('must see error in callback');
		});
	});
	
	it('next("route")', function(done) {
		var route = createRoute();
		
		route.layers.push(function(err, req, res, next) {
			next("route");
		});
				
		route.layers.push(function(err, req, res, next) {
			done('should not be called');
		});

		route(false, {}, {}, function(err) {
			done();
		});
		
	});
	
	it('not match method', function (done) {
		var route = createRoute('GET');
		route.layers.push(function (err, req, res, next) {
			done('should be be called');	
		});
		
		route(false, {method: 'POST'}, {}, function() {
			done();
		});
	});

	it('not match path', function (done) {
		var route = createRoute('GET', '/users');
		route.layers.push(function (err, req, res, next) {
			done('should be be called');	
		});
		
		route(false, {method: 'GET', path: '/users-foo'}, {}, function() {
			done();
		});		
	});
	
	it('match method and path', function(done){
		var route = createRoute('GET', '/users');
		route.layers.push(function (err, req, res, next) {
			done();	
		});
		
		route(false, {method: 'GET', path: '/users', url: '/users'}, {}, function() {
			done('should not be called');
		});		
	});
});